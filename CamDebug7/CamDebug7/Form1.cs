using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using HalconDotNet;//添加Halcon空间

using System.Threading;


namespace CamDebug7
{
    public partial class Form1 : Form
    {
        HObject ho_Image = null, ho_GrayImage = null, ho_Regions = null;
        HObject ho_ConnectedRegions = null, ho_SelectedRegions = null;
        HTuple hv_AcqHandle = null;
        public int ChuLi;
        public Form1()
        {
            InitializeComponent();
        }
        Thread dispig;

        private void button1_Click(object sender, EventArgs e)
        {
            dispig = new Thread(getin);
            dispig.Start();
        }

        private void button2_Click(object sender, EventArgs e)
        {
            dispig.Abort();
            HOperatorSet.CloseFramegrabber(hv_AcqHandle);

        }
        void getin()
        {
            HOperatorSet.GenEmptyObj(out ho_Image);
            HOperatorSet.GenEmptyObj(out ho_GrayImage);
            HOperatorSet.GenEmptyObj(out ho_Regions);
            HOperatorSet.GenEmptyObj(out ho_ConnectedRegions);
            HOperatorSet.GenEmptyObj(out ho_SelectedRegions);
            //Image Acquisition 01: Code generated by Image Acquisition 01
            HOperatorSet.OpenFramegrabber("DirectShow", 1, 1, 0, 0, 0, 0, "default", 8, "rgb",
                -1, "false", "default", "[1] USB2.0 PC CAMERA", 0, -1, out hv_AcqHandle);
            HOperatorSet.GrabImageStart(hv_AcqHandle, -1);
            while ((int)(1) != 0)
            {

                HOperatorSet.GrabImageAsync(out ho_Image, hv_AcqHandle, -1);
                HOperatorSet.DispObj(ho_Image, hSmartWindowControl1.HalconWindow);

                //Image Acquisition 01: Do something
                if (ChuLi == 1)
                {
                    ChuLi = 0;
                    HOperatorSet.DispObj(ho_Image, hSmartWindowControl2.HalconWindow);
                    ho_GrayImage.Dispose();
                    HOperatorSet.Rgb1ToGray(ho_Image, out ho_GrayImage);
                    ho_Regions.Dispose();
                    HOperatorSet.Threshold(ho_GrayImage, out ho_Regions, 0, 129);
                    ho_ConnectedRegions.Dispose();
                    HOperatorSet.Connection(ho_Regions, out ho_ConnectedRegions);
                    ho_SelectedRegions.Dispose();
                    HOperatorSet.SelectShape(ho_ConnectedRegions, out ho_SelectedRegions, "area",
                        "and", 11100.9, 15064.2);
                    HOperatorSet.DispObj(ho_SelectedRegions, hSmartWindowControl2.HalconWindow);
                }
                ho_Image.Dispose();
                ho_GrayImage.Dispose();
                ho_Regions.Dispose();
                ho_ConnectedRegions.Dispose();
                ho_SelectedRegions.Dispose();
            }


        }

        private void hSmartWindowControl1_Load(object sender, EventArgs e)
        {

        }

        private void Form1_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (dispig != null)
            {
                dispig.Abort(); //结束这个线程
            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            ChuLi = 1;
        }
        }
    }

