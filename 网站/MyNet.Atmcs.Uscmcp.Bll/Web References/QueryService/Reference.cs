//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace MyNet.Atmcs.Uscmcp.Bll.QueryService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="querypasscarHttpBinding", Namespace="http://query")]
    public partial class querypasscar : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback cancelWarnOperationCompleted;
        
        private System.Threading.SendOrPostCallback layoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPassCarInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPassCarInfo1OperationCompleted;
        
        private System.Threading.SendOrPostCallback cancleLayoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFollowPassCarInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFootholdInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback addWarnOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTgsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFrequentlyPassCarInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCarOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public querypasscar() {
            this.Url = global::MyNet.Atmcs.Uscmcp.Bll.Properties.Settings.Default.MyNet_Atmcs_Uscmcp_Bll_QueryService_querypasscar;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event cancelWarnCompletedEventHandler cancelWarnCompleted;
        
        /// <remarks/>
        public event layoutCompletedEventHandler layoutCompleted;
        
        /// <remarks/>
        public event GetPassCarInfoCompletedEventHandler GetPassCarInfoCompleted;
        
        /// <remarks/>
        public event GetPassCarInfo1CompletedEventHandler GetPassCarInfo1Completed;
        
        /// <remarks/>
        public event cancleLayoutCompletedEventHandler cancleLayoutCompleted;
        
        /// <remarks/>
        public event GetFollowPassCarInfoCompletedEventHandler GetFollowPassCarInfoCompleted;
        
        /// <remarks/>
        public event cancelCompletedEventHandler cancelCompleted;
        
        /// <remarks/>
        public event GetFootholdInfoCompletedEventHandler GetFootholdInfoCompleted;
        
        /// <remarks/>
        public event addWarnCompletedEventHandler addWarnCompleted;
        
        /// <remarks/>
        public event addTgsCompletedEventHandler addTgsCompleted;
        
        /// <remarks/>
        public event GetFrequentlyPassCarInfoCompletedEventHandler GetFrequentlyPassCarInfoCompleted;
        
        /// <remarks/>
        public event addCarCompletedEventHandler addCarCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://query", ResponseNamespace="http://query", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool cancelWarn([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("cancelWarn", new object[] {
                        in0});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void cancelWarnAsync(string in0) {
            this.cancelWarnAsync(in0, null);
        }
        
        /// <remarks/>
        public void cancelWarnAsync(string in0, object userState) {
            if ((this.cancelWarnOperationCompleted == null)) {
                this.cancelWarnOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelWarnOperationCompleted);
            }
            this.InvokeAsync("cancelWarn", new object[] {
                        in0}, this.cancelWarnOperationCompleted, userState);
        }
        
        private void OncancelWarnOperationCompleted(object arg) {
            if ((this.cancelWarnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelWarnCompleted(this, new cancelWarnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://query", ResponseNamespace="http://query", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool layout([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in3) {
            object[] results = this.Invoke("layout", new object[] {
                        in0,
                        in1,
                        in2,
                        in3});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void layoutAsync(string in0, string in1, string in2, string in3) {
            this.layoutAsync(in0, in1, in2, in3, null);
        }
        
        /// <remarks/>
        public void layoutAsync(string in0, string in1, string in2, string in3, object userState) {
            if ((this.layoutOperationCompleted == null)) {
                this.layoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlayoutOperationCompleted);
            }
            this.InvokeAsync("layout", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, this.layoutOperationCompleted, userState);
        }
        
        private void OnlayoutOperationCompleted(object arg) {
            if ((this.layoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.layoutCompleted(this, new layoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://query", ResponseNamespace="http://query", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string GetPassCarInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("GetPassCarInfo", new object[] {
                        in0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPassCarInfoAsync(string in0) {
            this.GetPassCarInfoAsync(in0, null);
        }
        
        /// <remarks/>
        public void GetPassCarInfoAsync(string in0, object userState) {
            if ((this.GetPassCarInfoOperationCompleted == null)) {
                this.GetPassCarInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPassCarInfoOperationCompleted);
            }
            this.InvokeAsync("GetPassCarInfo", new object[] {
                        in0}, this.GetPassCarInfoOperationCompleted, userState);
        }
        
        private void OnGetPassCarInfoOperationCompleted(object arg) {
            if ((this.GetPassCarInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPassCarInfoCompleted(this, new GetPassCarInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://query", ResponseNamespace="http://query", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string GetPassCarInfo1(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in3, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in4, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in5, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in6, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in7, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in8, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in9, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in10, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in11, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in12, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in13, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in14, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in15, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in16, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in17, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in18, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in19, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in20) {
            object[] results = this.Invoke("GetPassCarInfo1", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6,
                        in7,
                        in8,
                        in9,
                        in10,
                        in11,
                        in12,
                        in13,
                        in14,
                        in15,
                        in16,
                        in17,
                        in18,
                        in19,
                        in20});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPassCarInfo1Async(
                    string in0, 
                    string in1, 
                    string in2, 
                    string in3, 
                    string in4, 
                    string in5, 
                    string in6, 
                    string in7, 
                    string in8, 
                    string in9, 
                    string in10, 
                    string in11, 
                    string in12, 
                    string in13, 
                    string in14, 
                    string in15, 
                    string in16, 
                    string in17, 
                    string in18, 
                    string in19, 
                    string in20) {
            this.GetPassCarInfo1Async(in0, in1, in2, in3, in4, in5, in6, in7, in8, in9, in10, in11, in12, in13, in14, in15, in16, in17, in18, in19, in20, null);
        }
        
        /// <remarks/>
        public void GetPassCarInfo1Async(
                    string in0, 
                    string in1, 
                    string in2, 
                    string in3, 
                    string in4, 
                    string in5, 
                    string in6, 
                    string in7, 
                    string in8, 
                    string in9, 
                    string in10, 
                    string in11, 
                    string in12, 
                    string in13, 
                    string in14, 
                    string in15, 
                    string in16, 
                    string in17, 
                    string in18, 
                    string in19, 
                    string in20, 
                    object userState) {
            if ((this.GetPassCarInfo1OperationCompleted == null)) {
                this.GetPassCarInfo1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPassCarInfo1OperationCompleted);
            }
            this.InvokeAsync("GetPassCarInfo1", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6,
                        in7,
                        in8,
                        in9,
                        in10,
                        in11,
                        in12,
                        in13,
                        in14,
                        in15,
                        in16,
                        in17,
                        in18,
                        in19,
                        in20}, this.GetPassCarInfo1OperationCompleted, userState);
        }
        
        private void OnGetPassCarInfo1OperationCompleted(object arg) {
            if ((this.GetPassCarInfo1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPassCarInfo1Completed(this, new GetPassCarInfo1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://query", ResponseNamespace="http://query", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool cancleLayout([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("cancleLayout", new object[] {
                        in0});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void cancleLayoutAsync(string in0) {
            this.cancleLayoutAsync(in0, null);
        }
        
        /// <remarks/>
        public void cancleLayoutAsync(string in0, object userState) {
            if ((this.cancleLayoutOperationCompleted == null)) {
                this.cancleLayoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancleLayoutOperationCompleted);
            }
            this.InvokeAsync("cancleLayout", new object[] {
                        in0}, this.cancleLayoutOperationCompleted, userState);
        }
        
        private void OncancleLayoutOperationCompleted(object arg) {
            if ((this.cancleLayoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancleLayoutCompleted(this, new cancleLayoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://query", ResponseNamespace="http://query", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string GetFollowPassCarInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("GetFollowPassCarInfo", new object[] {
                        in0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFollowPassCarInfoAsync(string in0) {
            this.GetFollowPassCarInfoAsync(in0, null);
        }
        
        /// <remarks/>
        public void GetFollowPassCarInfoAsync(string in0, object userState) {
            if ((this.GetFollowPassCarInfoOperationCompleted == null)) {
                this.GetFollowPassCarInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFollowPassCarInfoOperationCompleted);
            }
            this.InvokeAsync("GetFollowPassCarInfo", new object[] {
                        in0}, this.GetFollowPassCarInfoOperationCompleted, userState);
        }
        
        private void OnGetFollowPassCarInfoOperationCompleted(object arg) {
            if ((this.GetFollowPassCarInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFollowPassCarInfoCompleted(this, new GetFollowPassCarInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://query", ResponseNamespace="http://query", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool cancel([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("cancel", new object[] {
                        in0});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void cancelAsync(string in0) {
            this.cancelAsync(in0, null);
        }
        
        /// <remarks/>
        public void cancelAsync(string in0, object userState) {
            if ((this.cancelOperationCompleted == null)) {
                this.cancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelOperationCompleted);
            }
            this.InvokeAsync("cancel", new object[] {
                        in0}, this.cancelOperationCompleted, userState);
        }
        
        private void OncancelOperationCompleted(object arg) {
            if ((this.cancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelCompleted(this, new cancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://query", ResponseNamespace="http://query", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string GetFootholdInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("GetFootholdInfo", new object[] {
                        in0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFootholdInfoAsync(string in0) {
            this.GetFootholdInfoAsync(in0, null);
        }
        
        /// <remarks/>
        public void GetFootholdInfoAsync(string in0, object userState) {
            if ((this.GetFootholdInfoOperationCompleted == null)) {
                this.GetFootholdInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFootholdInfoOperationCompleted);
            }
            this.InvokeAsync("GetFootholdInfo", new object[] {
                        in0}, this.GetFootholdInfoOperationCompleted, userState);
        }
        
        private void OnGetFootholdInfoOperationCompleted(object arg) {
            if ((this.GetFootholdInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFootholdInfoCompleted(this, new GetFootholdInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://query", ResponseNamespace="http://query", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool addWarn([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2) {
            object[] results = this.Invoke("addWarn", new object[] {
                        in0,
                        in1,
                        in2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addWarnAsync(string in0, string in1, string in2) {
            this.addWarnAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void addWarnAsync(string in0, string in1, string in2, object userState) {
            if ((this.addWarnOperationCompleted == null)) {
                this.addWarnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddWarnOperationCompleted);
            }
            this.InvokeAsync("addWarn", new object[] {
                        in0,
                        in1,
                        in2}, this.addWarnOperationCompleted, userState);
        }
        
        private void OnaddWarnOperationCompleted(object arg) {
            if ((this.addWarnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addWarnCompleted(this, new addWarnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://query", ResponseNamespace="http://query", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool addTgs([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in3) {
            object[] results = this.Invoke("addTgs", new object[] {
                        in0,
                        in1,
                        in2,
                        in3});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addTgsAsync(string in0, string in1, string in2, string in3) {
            this.addTgsAsync(in0, in1, in2, in3, null);
        }
        
        /// <remarks/>
        public void addTgsAsync(string in0, string in1, string in2, string in3, object userState) {
            if ((this.addTgsOperationCompleted == null)) {
                this.addTgsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTgsOperationCompleted);
            }
            this.InvokeAsync("addTgs", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, this.addTgsOperationCompleted, userState);
        }
        
        private void OnaddTgsOperationCompleted(object arg) {
            if ((this.addTgsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTgsCompleted(this, new addTgsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://query", ResponseNamespace="http://query", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string GetFrequentlyPassCarInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0) {
            object[] results = this.Invoke("GetFrequentlyPassCarInfo", new object[] {
                        in0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFrequentlyPassCarInfoAsync(string in0) {
            this.GetFrequentlyPassCarInfoAsync(in0, null);
        }
        
        /// <remarks/>
        public void GetFrequentlyPassCarInfoAsync(string in0, object userState) {
            if ((this.GetFrequentlyPassCarInfoOperationCompleted == null)) {
                this.GetFrequentlyPassCarInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFrequentlyPassCarInfoOperationCompleted);
            }
            this.InvokeAsync("GetFrequentlyPassCarInfo", new object[] {
                        in0}, this.GetFrequentlyPassCarInfoOperationCompleted, userState);
        }
        
        private void OnGetFrequentlyPassCarInfoOperationCompleted(object arg) {
            if ((this.GetFrequentlyPassCarInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFrequentlyPassCarInfoCompleted(this, new GetFrequentlyPassCarInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://query", ResponseNamespace="http://query", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public bool addCar([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2) {
            object[] results = this.Invoke("addCar", new object[] {
                        in0,
                        in1,
                        in2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addCarAsync(string in0, string in1, string in2) {
            this.addCarAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void addCarAsync(string in0, string in1, string in2, object userState) {
            if ((this.addCarOperationCompleted == null)) {
                this.addCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCarOperationCompleted);
            }
            this.InvokeAsync("addCar", new object[] {
                        in0,
                        in1,
                        in2}, this.addCarOperationCompleted, userState);
        }
        
        private void OnaddCarOperationCompleted(object arg) {
            if ((this.addCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCarCompleted(this, new addCarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void cancelWarnCompletedEventHandler(object sender, cancelWarnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelWarnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelWarnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void layoutCompletedEventHandler(object sender, layoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class layoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal layoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPassCarInfoCompletedEventHandler(object sender, GetPassCarInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPassCarInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPassCarInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPassCarInfo1CompletedEventHandler(object sender, GetPassCarInfo1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPassCarInfo1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPassCarInfo1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void cancleLayoutCompletedEventHandler(object sender, cancleLayoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancleLayoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancleLayoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFollowPassCarInfoCompletedEventHandler(object sender, GetFollowPassCarInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFollowPassCarInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFollowPassCarInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void cancelCompletedEventHandler(object sender, cancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFootholdInfoCompletedEventHandler(object sender, GetFootholdInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFootholdInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFootholdInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void addWarnCompletedEventHandler(object sender, addWarnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addWarnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addWarnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void addTgsCompletedEventHandler(object sender, addTgsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTgsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTgsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFrequentlyPassCarInfoCompletedEventHandler(object sender, GetFrequentlyPassCarInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFrequentlyPassCarInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFrequentlyPassCarInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void addCarCompletedEventHandler(object sender, addCarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591