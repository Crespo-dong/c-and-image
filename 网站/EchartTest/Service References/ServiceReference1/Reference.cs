//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace EchartTest.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://query", ConfigurationName="ServiceReference1.querypasscarPortType")]
    public interface querypasscarPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool cancelWarn(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool layout(string in0, string in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string GetPassCarInfo(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string GetPassCarInfo1(
                    string in0, 
                    string in1, 
                    string in2, 
                    string in3, 
                    string in4, 
                    string in5, 
                    string in6, 
                    string in7, 
                    string in8, 
                    string in9, 
                    string in10, 
                    string in11, 
                    string in12, 
                    string in13, 
                    string in14, 
                    string in15, 
                    string in16, 
                    string in17, 
                    string in18, 
                    string in19, 
                    string in20);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool cancleLayout(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string GetFollowPassCarInfo(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool cancel(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string GetFootholdInfo(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool addWarn(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool addTgs(string in0, string in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string GetFrequentlyPassCarInfo(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        bool addCar(string in0, string in1, string in2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface querypasscarPortTypeChannel : EchartTest.ServiceReference1.querypasscarPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class querypasscarPortTypeClient : System.ServiceModel.ClientBase<EchartTest.ServiceReference1.querypasscarPortType>, EchartTest.ServiceReference1.querypasscarPortType {
        
        public querypasscarPortTypeClient() {
        }
        
        public querypasscarPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public querypasscarPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public querypasscarPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public querypasscarPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool cancelWarn(string in0) {
            return base.Channel.cancelWarn(in0);
        }
        
        public bool layout(string in0, string in1, string in2, string in3) {
            return base.Channel.layout(in0, in1, in2, in3);
        }
        
        public string GetPassCarInfo(string in0) {
            return base.Channel.GetPassCarInfo(in0);
        }
        
        public string GetPassCarInfo1(
                    string in0, 
                    string in1, 
                    string in2, 
                    string in3, 
                    string in4, 
                    string in5, 
                    string in6, 
                    string in7, 
                    string in8, 
                    string in9, 
                    string in10, 
                    string in11, 
                    string in12, 
                    string in13, 
                    string in14, 
                    string in15, 
                    string in16, 
                    string in17, 
                    string in18, 
                    string in19, 
                    string in20) {
            return base.Channel.GetPassCarInfo1(in0, in1, in2, in3, in4, in5, in6, in7, in8, in9, in10, in11, in12, in13, in14, in15, in16, in17, in18, in19, in20);
        }
        
        public bool cancleLayout(string in0) {
            return base.Channel.cancleLayout(in0);
        }
        
        public string GetFollowPassCarInfo(string in0) {
            return base.Channel.GetFollowPassCarInfo(in0);
        }
        
        public bool cancel(string in0) {
            return base.Channel.cancel(in0);
        }
        
        public string GetFootholdInfo(string in0) {
            return base.Channel.GetFootholdInfo(in0);
        }
        
        public bool addWarn(string in0, string in1, string in2) {
            return base.Channel.addWarn(in0, in1, in2);
        }
        
        public bool addTgs(string in0, string in1, string in2, string in3) {
            return base.Channel.addTgs(in0, in1, in2, in3);
        }
        
        public string GetFrequentlyPassCarInfo(string in0) {
            return base.Channel.GetFrequentlyPassCarInfo(in0);
        }
        
        public bool addCar(string in0, string in1, string in2) {
            return base.Channel.addCar(in0, in1, in2);
        }
    }
}
